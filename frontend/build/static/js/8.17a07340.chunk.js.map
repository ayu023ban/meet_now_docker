{"version":3,"sources":["redux/actions/roomActions.js","components/home/CreateRoom.js","constants.js","components/home/JoinRoom.js","components/home/RoomCard.js","components/home/RoomsList.js","views/HomeView.js"],"names":["createNewRoom","data","url","create_room","dispatch","apiClient","post","then","res","apiDispatch","CREATE_ROOM","navigator","clipboard","writeText","getUrlFromCode","id","toast","success","catch","err","error","getRooms","get_room","get","GET_ROOMS","toggleAudio","TOGGLE_USER_AUDIO","toggleVideo","TOGGLE_USER_VIDEO","useStyles","makeStyles","theme","button","margin","spacing","float","row","display","marginTop","CreateRoom","classes","useState","roomName","setRoomName","isError","setIsError","useDispatch","Paper","elevation","style","minWidth","minHeight","borderRadius","padding","Typography","variant","align","className","TextField","label","value","required","onChange","newName","target","length","flexGrow","Button","color","endIcon","onClick","room_name","JOIN_ROOM_TYPE","DEMO_CODE","JoinRoom","history","useHistory","Boolean","helperText","result","type","is_correct","error_message","new_url","URL","hostname","window","location","path","pathname","demo_url","checkUrl","push","RoomCard","room","Card","borderTop","CardHeader","title","action","IconButton","ArrowForward","CardContent","defaultValue","InputProps","readOnly","text","onCopy","Assignment","paper","maxHeight","overflow","msOverflowStyle","scrollbarWidth","header","background","palette","position","top","zIndex","paddingBottom","RoomList","rooms","useSelector","state","roomReducer","map","el","idx","component","width","justifyContent","alignItems","leftComp","flexDirection","container","height","backgroundColor","default","HomeView","useLocation","useEffect","message","replaceState","Container","maxWidth"],"mappings":"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","file":"static/js/8.17a07340.chunk.js","sourcesContent":["import apiClient from \"../../helper/apiclient\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  CREATE_ROOM,\n  GET_ROOMS,\n  TOGGLE_USER_AUDIO,\n  TOGGLE_USER_VIDEO,\n} from \"./roomActionTypes\";\n\nimport { create_room, get_room, invite } from \"../../config/backend_api\";\n\nimport { apiDispatch, getUrlFromCode } from \"../../helper/helperFunctions\";\n\nexport const createNewRoom = (data) => {\n  const url = create_room;\n  return (dispatch) => {\n    apiClient\n      .post(url, data)\n      .then((res) => {\n        dispatch(apiDispatch(CREATE_ROOM, res.data));\n        navigator.clipboard.writeText(getUrlFromCode(res.data.id));\n        toast.success(\"copied to clipboard\");\n      })\n      .catch((err) => {\n        toast.error(`error occured in creating the room`);\n      });\n  };\n};\n\nexport const getRooms = () => {\n  const url = get_room;\n  return (dispatch) => {\n    apiClient\n      .get(url)\n      .then((res) => {\n        dispatch(apiDispatch(GET_ROOMS, res.data));\n      })\n      .catch((err) => {\n        toast.error(`error occured in fetching your rooms`, {});\n      });\n  };\n};\n\nexport const toggleAudio = () => {\n  return (dispatch) => {\n    dispatch(apiDispatch(TOGGLE_USER_AUDIO));\n  };\n};\nexport const toggleVideo = () => {\n  return (dispatch) => {\n    dispatch(apiDispatch(TOGGLE_USER_VIDEO));\n  };\n};\n\nexport const inviteUser = (roomId, data) => {\n  const url = invite(roomId);\n  return (dispatch) => {\n    apiClient\n      .post(url, data)\n      .then((res) => {\n        toast.success(\"user invited\");\n      })\n      .catch((err) => {\n        toast.error(err.data);\n      });\n  };\n};\n","import {\n  Button,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createNewRoom } from \"../../redux/actions/roomActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    float: \"right\",\n  },\n  row: {\n    display: \"flex\",\n    marginTop: \"1rem\",\n  },\n}));\n\nfunction CreateRoom() {\n  const classes = useStyles();\n  const [roomName, setRoomName] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <Paper\n      elevation={3}\n      style={{\n        minWidth: \"35rem\",\n        minHeight: \"7rem\",\n        borderRadius: \"2rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <Typography variant=\"h2\" align=\"center\">\n        Create New Room\n      </Typography>\n      <div className={classes.row}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Room Name\"\n          value={roomName}\n          error={isError}\n          required\n          onChange={(value) => {\n            const newName = value.target.value;\n            if (newName.length < 100) {\n              setRoomName(newName);\n            }\n            if (isError) setIsError(false);\n          }}\n          style={{ flexGrow: 1 }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          endIcon={<SendIcon />}\n          onClick={() => {\n            if (roomName.length === 0) {\n              setIsError(true);\n            } else {\n              dispatch(\n                createNewRoom({\n                  room_name: roomName,\n                })\n              );\n              setRoomName(\"\");\n            }\n          }}\n        >\n          Create\n        </Button>\n      </div>\n    </Paper>\n  );\n}\n\nexport default CreateRoom;\n","export const JOIN_ROOM_TYPE = {\n  URL: \"URL\",\n  CODE: \"CODE\",\n};\nexport const DEMO_PATH =\n  \"http://localhost:3000/room/27655cd3-e3c3-4e19-8f8f-19c5a245cbcc/\";\nexport const DEMO_CODE = \"27655cd3-e3c3-4e19-8f8f-19c5a245cbcc\";\n","import { Button, Paper, TextField, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { JOIN_ROOM_TYPE, DEMO_PATH, DEMO_CODE } from \"../../constants\";\nimport { useHistory } from \"react-router\";\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    float: \"right\",\n  },\n  row: {\n    display: \"flex\",\n    marginTop: \"1rem\",\n  },\n}));\n\nconst checkUrl = (url) => {\n  const result = {\n    type: JOIN_ROOM_TYPE.URL,\n    is_correct: true,\n    error_message: \"\",\n  };\n  try {\n    const new_url = new URL(url);\n    if (new_url.hostname !== window.location.hostname) {\n      result.is_correct = false;\n      result.error_message = `host of url should be ${window.location.hostname}`;\n      return result;\n    }\n    const path = new_url.pathname;\n    const demo_url = new URL(DEMO_PATH);\n    if (path.length < demo_url.pathname.length) {\n      result.is_correct = false;\n      result.error_message = \"url path too short\";\n      return result;\n    } else if (path.length > demo_url.pathname.length) {\n      result.is_correct = false;\n      result.error_message = \"url path too long\";\n      return result;\n    }\n  } catch {\n    result.type = JOIN_ROOM_TYPE.CODE;\n    if (url.length < DEMO_CODE.length) {\n      result.is_correct = false;\n      result.error_message = \"code is too short\";\n      return result;\n    }\n    if (url.length > DEMO_CODE.length) {\n      result.is_correct = false;\n      result.error_message = \"code is too long\";\n      return result;\n    }\n  }\n  return result;\n};\n\nconst JoinRoom = () => {\n  const classes = useStyles();\n  const [roomName, setRoomName] = useState(\"\");\n  const [isError, setIsError] = useState(\"\");\n  const history = useHistory();\n  return (\n    <Paper\n      elevation={3}\n      style={{\n        minWidth: \"35rem\",\n        minHeight: \"7rem\",\n        borderRadius: \"2rem\",\n        padding: \"1rem\",\n        marginTop: \"2rem\",\n      }}\n    >\n      <Typography variant=\"h2\" align=\"center\">\n        Join Room\n      </Typography>\n      <div className={classes.row}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Enter code or link of the room\"\n          value={roomName}\n          error={Boolean(isError)}\n          helperText={isError}\n          onChange={(value) => {\n            const newName = value.target.value;\n            setRoomName(newName);\n            if (isError) setIsError(\"\");\n          }}\n          style={{ flexGrow: 1 }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          endIcon={<SendIcon />}\n          onClick={() => {\n            const result = checkUrl(roomName);\n            if (!result.is_correct) {\n              setIsError(result.error_message);\n            } else {\n              let path = \"\";\n              if (result.type === JOIN_ROOM_TYPE.URL) {\n                const url = new URL(roomName);\n                path = url.pathname;\n              } else {\n                path = `room/${roomName}`;\n              }\n              history.push(path);\n            }\n          }}\n        >\n          Join\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default JoinRoom;\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n  TextField,\n} from \"@material-ui/core\";\nimport { ArrowForward, Assignment } from \"@material-ui/icons\";\nimport React from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport { getUrlFromCode } from \"../../helper/helperFunctions\";\n\nconst RoomCard = ({ room }) => {\n  const history = useHistory();\n  const url = getUrlFromCode(room.id);\n  return (\n    <Card style={{ borderTop: \"1px solid #ccc\" }}>\n      <CardHeader\n        title={room.room_name}\n        action={\n          <IconButton\n            onClick={() => {\n              history.push(`/room/${room.id}/`);\n            }}\n          >\n            <ArrowForward />\n          </IconButton>\n        }\n      />\n      <CardContent style={{ display: \"flex\" }}>\n        <TextField\n          variant=\"outlined\"\n          defaultValue={url}\n          InputProps={{\n            readOnly: true,\n          }}\n          style={{ flexGrow: 2 }}\n        />\n        <CopyToClipboard\n          text={url}\n          onCopy={() => {\n            toast.success(\"copied to clipboard\");\n          }}\n        >\n          <IconButton style={{ float: \"right\" }}>\n            <Assignment />\n          </IconButton>\n        </CopyToClipboard>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RoomCard;\n","import { Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport RoomCard from \"./RoomCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    minWidth: \"35rem\",\n    minHeight: \"7rem\",\n    borderRadius: \"2rem\",\n    maxHeight: \"40rem\",\n    overflow: \"scroll\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n    msOverflowStyle: \"none\",\n    scrollbarWidth: \"none\",\n  },\n  header: {\n    background: theme.palette.background.paper,\n    position: \"sticky\",\n    top: 0,\n    zIndex: 1,\n    paddingBottom: \"1rem\",\n  },\n}));\n\nconst RoomList = () => {\n  const rooms = useSelector((state) => state.roomReducer.rooms);\n  const classes = useStyles();\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <Typography variant=\"h2\" align=\"center\" className={classes.header}>\n        Your Rooms\n      </Typography>\n      {rooms.length > 0 &&\n        rooms.map((el, idx) => <RoomCard key={idx} room={el} />)}\n      {rooms.length === 0 && (\n        <Typography className=\"my-5\" align=\"center\">\n          No rooms available. Please create a room to proceed\n        </Typography>\n      )}\n    </Paper>\n  );\n};\n\nexport default RoomList;\n","import { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport CreateRoom from \"../components/home/CreateRoom\";\nimport JoinRoom from \"../components/home/JoinRoom\";\nimport RoomList from \"../components/home/RoomsList\";\nimport { getRooms } from \"../redux/actions/roomActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  component: {\n    flexGrow: 1,\n    width: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  leftComp: {\n    flexGrow: 1,\n    width: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  container: {\n    display: \"flex\",\n    height: \"100%\",\n    backgroundColor: theme.palette.background.default,\n  },\n}));\n\nconst HomeView = () => {\n  const location = useLocation();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getRooms());\n    if (location.state && location.state.message) {\n      if (location.state.type === \"error\") {\n        toast.error(location.state.message);\n      }\n      window.history.replaceState(null, \"\");\n    }\n  }, []);\n  return (\n    <Container maxWidth={false} className={classes.container}>\n      <div className={[classes.leftComp]}>\n        <CreateRoom />\n        <JoinRoom />\n      </div>\n      <div className={classes.component}>\n        <RoomList />\n      </div>\n    </Container>\n  );\n};\nexport default HomeView;\n"],"sourceRoot":""}